#ifndef VIEWER_H_
#define VIEWER_H_

//#define EXCEED_

#include<iostream>
#include<fstream>
#include<pthread.h>
#include<semaphore.h>
#include<X11/Xlib.h>
#include<X11/Xutil.h>

using namespace std;

#ifndef COLOR_SPACE
#define COLOR_SPACE
enum color_space{GRAY = 0, RGB = 1};
#endif

enum mouse_events{PRESS = 0, RELEASE = 1, DRAG = 2};

class viewer
{
  public:
    int black, white;
    char* data_buff;
    XImage* ximg1;
    char* ximg1_data;
    int type;
    unsigned int width;
    unsigned int height;
    bool DRAWING;
    int box_r, box_g, box_b;
    int x1, y1, x2, y2;
    int ulx, uly, lrx, lry;
    int BOX_POINTS;
    bool DRAW_BOX;

    Display* xdisplay;
    int xscreen;
    Visual *xvisual;
    Window rootwindow;
    Window window1;
    GC wgc;
    Colormap cmap;
    int depth;
    XEvent e;

    sem_t mutex_event;
    sem_t mutex_draw;
    bool EVENT;
    int X, Y, BUTTON, TYPE;

    viewer();
    ~viewer();
    void move(int, int);
    void image(char*, int, int, int type=RGB);
    void image(char* data, int w, int h, int t, char* viewerName);
    void get_event();
    void ginput(int&, int&);
    void ginput(int&, int&, int&);
    void ginput(int&, int&, int& ,int&);
    void box_color(int, int, int);
    void draw_box();
    void get_box(int&, int&, int&, int&);
    void raise();
    void redraw();
};

void thread_viewer(viewer&);
void* viewer_thread(void*);

#endif
