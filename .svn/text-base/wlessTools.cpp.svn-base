/*
 * wlessTools.cpp
 *
 *  Created on: Apr 3, 2012
 *      Author: root
 */

#include "wlessTools.h"


void wlessTools::initWirelessCheck(){
	stats = (iwstats *)malloc(sizeof(iwstats));	// stores wireless stat info
	range = (iwrange *)malloc(sizeof(iwrange));	// stores wireless range info
	context = (wireless_scan_head *)malloc(sizeof(wireless_scan_head));	// dunno

	has_range = 0;

	skfd = iw_sockets_open();

	ifname = (char *)malloc(sizeof(char)*100);
	sprintf(ifname, "wlan0");

	context->retry = 0;
	context->result = NULL;

}

void wlessTools::run(void){
	while(1) {
		iw_get_stats(skfd, ifname, stats, range, has_range);

		int level_val = stats->qual.level;

		if(level_val >= 64)
			level_val -= 0x100;

		printf("signal:\t%d\n", level_val);
	}
}

int wlessTools::getSignalLevel(void) {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int signal_level = stats->qual.level;

	if(signal_level >= 64)
		signal_level -= 0x100;

	if(signal_level == 0) {
		printf("ERROR: Cannot get signal level\n");
		return -1;
	}

	return signal_level;
}

int wlessTools::getNoiseLevel() {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int noise_level = stats->qual.noise;

	if(noise_level >= 64)
		noise_level -= 0x100;

	if(noise_level == 0) {
		printf("ERROR: Cannot get noise level\n");
		return -1;
	}

	return noise_level;
}

int wlessTools::getSINR() {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int signal_level = stats->qual.level;
	int noise_level = stats->qual.noise;

	if(signal_level >= 64)
		signal_level -= 0x100;

	if(noise_level >= 64)
		noise_level -= 0x100;

	if(signal_level == 0) {
		printf("ERROR: Cannot get signal level\n");
		return -1;
	}

	if(noise_level == 0) {
		printf("ERROR: Cannot get noise level\n");
		return -1;
	}

	int SINR = signal_level-noise_level;

	return SINR;
}

void wlessTools::printSignalLevel() {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int signal_level = stats->qual.level;

	if(signal_level >= 64)
		signal_level -= 0x100;

	if(signal_level == 0) {
		printf("ERROR: Cannot get signal level\n");
		return;
	}

	printf("signal:\t%d\n",signal_level);

	return;
}

void wlessTools::printNoiseLevel() {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int noise_level = stats->qual.noise;

	if(noise_level >= 64)
		noise_level -= 0x100;

	if(noise_level == 0) {
		printf("ERROR: Cannot get noise level\n");
		return;
	}

	printf("noise:\t%d\n",noise_level);

	return;
}

void wlessTools::printSINR() {
	iw_get_stats(skfd, ifname, stats, range, has_range);

	int signal_level = stats->qual.level;
	int noise_level = stats->qual.noise;

	if(signal_level >= 64)
		signal_level -= 0x100;

	if(noise_level >= 64)
		noise_level -= 0x100;

	if(signal_level == 0) {
		printf("ERROR: Cannot get signal level\n");
		return;
	}

	if(noise_level == 0) {
		printf("ERROR: Cannot get noise level\n");
		return;
	}

	int SINR = signal_level-noise_level;

	printf("SINR:\t%d\n",SINR);

	return;
}


wlessTools::wlessTools() {
	// TODO Auto-generated constructor stub

}

wlessTools::~wlessTools() {
	// TODO Auto-generated destructor stub
}
